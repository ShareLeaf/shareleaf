#**********************************************************************
# Build and deploy ShareLeaf UI
#**********************************************************************
name: ShareLeaf UI | Prod
on:
  push:
    branches: [bm/SL-1_dev_ops]
      #  pull_request:
#    branches: [ main ]
#    types: [opened, closed]
    paths:
      - "ui/**"
env:
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION_US: 'us-east-2'
  AWS_ECR_REGISTRY: '537408061242.dkr.ecr.us-east-2.amazonaws.com'
  AWS_ECR_REPO: 'shareleaf'
  IMAGE_TAG: 'shareleaf-prod-ui-latest'
  PROJECT_NAME: 'ui'
  ARTIFACT_PATH: 'shareleaf/build'
  ENV_FILE: '.env-prod'

jobs:
  build:
#    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ env.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_US }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ env.AWS_ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ env.AWS_ECR_REPO }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          cd ui
          echo *********WORKING DIRECTORY***********
          pwd
          echo *********ls*******
          ls
          ls pages
          ls public
          ls src
          ls src/content
          tree
          cp ${{ env.ENV_FILE }} .env
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - run: mkdir -p ${{ env.ARTIFACT_PATH }}
      - run: echo ${{ steps.build-image.outputs.image }} > ${{ env.ARTIFACT_PATH }}/${{ env.IMAGE_TAG }}.txt
      - uses: actions/upload-artifact@v2
        with:
          name: image-tag
          path: ${{ env.ARTIFACT_PATH }}/${{ env.IMAGE_TAG }}.txt