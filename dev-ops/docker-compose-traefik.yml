version: "3.3"

services:
  traefik:
    image: "traefik:v2.5"
    container_name: "traefik_wild"
    restart: always
    command:
#      - --log.level=DEBUG
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false

      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https

      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certResolver=letsencrypt
      - --entrypoints.websecure.http.tls.domains[0].main=shareleaf.co
      - --entrypoints.websecure.http.tls.domains[0].sans=*.shareleaf.co

      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=lightsail
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.delayBeforeCheck=60
#      - --certificatesResolvers.letsencrypt.acme.dnsChallenge.resolvers=1.1.1.1:53,8.8.8.8:53
      - --certificatesresolvers.letsencrypt.acme.email=bizmelesse@gmail.com
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json

#      - --certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory

      - --certificatesresolvers.tlsresolver.acme.tlschallenge=true
      - --certificatesresolvers.tlsresolver.acme.email=bizmelesse@gmail.com
      - --certificatesresolvers.tlsresolver.acme.storage=/tlsresolver/acme.json
      - --certificatesresolvers.tlsresolver.acme.httpchallenge.entrypoint=web

      - --api.dashboard=true

    environment:
      - "AWS_ACCESS_KEY_ID=AKIAX2IAEH45BPGE7RU6"
      - "AWS_SECRET_ACCESS_KEY=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"
      - "DNS_ZONE=shareleaf.co"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "./tlsresolver:/tlsresolver"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

    networks:
      - traefik_network

#    deploy:
#      placement:
#        constraints:
#          - node.role == manager
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.traefik.loadbalancer.server.port=8888"
      - "traefik.http.routers.traefik.rule=Host(`dashboard.shareleaf.co`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=admin:$$apr1$$2/vzblDk$$dbLSbhZ3AriX/aN8hzPpW1"

#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.shareleaf.co`)"
#      - "traefik.http.routers.traefik-dashboard.service=traefik-dashboard"
#      - "traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080"

networks:
  traefik_network:
    external: true